{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "3209699319320679652"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the environment that can be used as part of naming resource convention."
      }
    },
    "location": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Primary location for all resources."
      }
    },
    "cosmosDbAccountName": {
      "type": "string",
      "defaultValue": ""
    },
    "openAiAccountName": {
      "type": "string",
      "defaultValue": ""
    },
    "frontendAppServicePlanName": {
      "type": "string",
      "defaultValue": ""
    },
    "backendAppServicePlanName": {
      "type": "string",
      "defaultValue": ""
    },
    "frontendAppName": {
      "type": "string",
      "defaultValue": ""
    },
    "backendAppName": {
      "type": "string",
      "defaultValue": ""
    }
  },
  "variables": {
    "$fxv#0": {
      "cosmosDbAccount": "cosmos",
      "openAiAccount": "openai",
      "userAssignedIdentity": "ua-id",
      "appServiceWebApp": "web",
      "appServicePlan": "plan"
    },
    "abbreviations": "[variables('$fxv#0')]",
    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2022-09-01",
      "name": "[parameters('environmentName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "identity",
      "resourceGroup": "[parameters('environmentName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "identityName": {
            "value": "[format('{0}-{1}', variables('abbreviations').userAssignedIdentity, variables('resourceToken'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "7085740831629274370"
            },
            "description": "Create identity resources."
          },
          "parameters": {
            "identityName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "frontend-identity",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[format('{0}-frontend', parameters('identityName'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "8957309104386053938"
                    },
                    "description": "Creates a Microsoft Entra user-assigned identity."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2023-01-31",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]"
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
                    },
                    "principalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2023-01-31').principalId]"
                    },
                    "clientId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2023-01-31').clientId]"
                    },
                    "tenantId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2023-01-31').tenantId]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "backend-identity",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[format('{0}-backend', parameters('identityName'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "8957309104386053938"
                    },
                    "description": "Creates a Microsoft Entra user-assigned identity."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2023-01-31",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]"
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
                    },
                    "principalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2023-01-31').principalId]"
                    },
                    "clientId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2023-01-31').clientId]"
                    },
                    "tenantId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2023-01-31').tenantId]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "frontendIdentity": {
              "type": "object",
              "value": {
                "name": "[reference(resourceId('Microsoft.Resources/deployments', 'frontend-identity'), '2022-09-01').outputs.name.value]",
                "resourceId": "[reference(resourceId('Microsoft.Resources/deployments', 'frontend-identity'), '2022-09-01').outputs.resourceId.value]",
                "principalId": "[reference(resourceId('Microsoft.Resources/deployments', 'frontend-identity'), '2022-09-01').outputs.principalId.value]",
                "clientId": "[reference(resourceId('Microsoft.Resources/deployments', 'frontend-identity'), '2022-09-01').outputs.clientId.value]"
              }
            },
            "backendIdentity": {
              "type": "object",
              "value": {
                "name": "[reference(resourceId('Microsoft.Resources/deployments', 'backend-identity'), '2022-09-01').outputs.name.value]",
                "resourceId": "[reference(resourceId('Microsoft.Resources/deployments', 'backend-identity'), '2022-09-01').outputs.resourceId.value]",
                "principalId": "[reference(resourceId('Microsoft.Resources/deployments', 'backend-identity'), '2022-09-01').outputs.principalId.value]",
                "clientId": "[reference(resourceId('Microsoft.Resources/deployments', 'backend-identity'), '2022-09-01').outputs.clientId.value]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('environmentName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ai",
      "resourceGroup": "[parameters('environmentName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "accountName": "[if(not(empty(parameters('openAiAccountName'))), createObject('value', parameters('openAiAccountName')), createObject('value', format('{0}-{1}', variables('abbreviations').openAiAccount, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4875330032681413094"
            },
            "description": "Create AI accounts."
          },
          "parameters": {
            "accountName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "completionModelName": {
              "type": "string",
              "defaultValue": "gpt-4o"
            },
            "completionsDeploymentName": {
              "type": "string",
              "defaultValue": "gpt-4o"
            },
            "embeddingsModelName": {
              "type": "string",
              "defaultValue": "text-embedding-ada-002"
            },
            "embeddingsDeploymentName": {
              "type": "string",
              "defaultValue": "text-embedding-ada-002"
            }
          },
          "variables": {
            "deployments": [
              {
                "name": "[parameters('completionsDeploymentName')]",
                "skuCapacity": 10,
                "modelName": "[parameters('completionModelName')]",
                "modelVersion": "2024-08-06"
              },
              {
                "name": "[parameters('embeddingsDeploymentName')]",
                "skuCapacity": 5,
                "modelName": "[parameters('embeddingsModelName')]",
                "modelVersion": "2"
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-account",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('accountName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "kind": {
                    "value": "OpenAI"
                  },
                  "sku": {
                    "value": "S0"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "12882548000779228818"
                    },
                    "description": "Creates an Azure OpenAI service account."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "OpenAI",
                      "allowedValues": [
                        "OpenAI"
                      ],
                      "metadata": {
                        "description": "The kind of cognitive service to create."
                      }
                    },
                    "sku": {
                      "type": "string",
                      "allowedValues": [
                        "S0"
                      ],
                      "metadata": {
                        "description": "The SKU of the cognitive service account."
                      }
                    },
                    "enablePublicNetworkAccess": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Specifies whether public network access is allowed."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.CognitiveServices/accounts",
                      "apiVersion": "2023-05-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "sku": {
                        "name": "[parameters('sku')]"
                      },
                      "properties": {
                        "customSubDomainName": "[parameters('name')]",
                        "publicNetworkAccess": "[if(parameters('enablePublicNetworkAccess'), 'Enabled', 'Disabled')]",
                        "networkAcls": {
                          "defaultAction": "Allow",
                          "virtualNetworkRules": [],
                          "ipRules": []
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
                    },
                    "endpoint": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01').endpoint]"
                    }
                  }
                }
              }
            },
            {
              "copy": {
                "name": "openAiModelDeployments",
                "count": "[length(variables('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('openai-model-deployment-{0}', variables('deployments')[copyIndex()].name)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[variables('deployments')[copyIndex()].name]"
                  },
                  "parentAccountName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'openai-account'), '2022-09-01').outputs.name.value]"
                  },
                  "skuName": {
                    "value": "Standard"
                  },
                  "skuCapacity": {
                    "value": "[variables('deployments')[copyIndex()].skuCapacity]"
                  },
                  "modelName": {
                    "value": "[variables('deployments')[copyIndex()].modelName]"
                  },
                  "modelVersion": {
                    "value": "[variables('deployments')[copyIndex()].modelVersion]"
                  },
                  "modelFormat": {
                    "value": "OpenAI"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3512588407369461741"
                    },
                    "description": "Creates an Azure OpenAI model deployment."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "parentAccountName": {
                      "type": "string"
                    },
                    "modelName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the Azure OpenAI model to deploy."
                      }
                    },
                    "modelVersion": {
                      "type": "string",
                      "metadata": {
                        "description": "The version of the model to deploy."
                      }
                    },
                    "modelFormat": {
                      "type": "string",
                      "defaultValue": "OpenAI",
                      "allowedValues": [
                        "OpenAI"
                      ],
                      "metadata": {
                        "description": "The format of the model. Always \"OpenAI\" for now."
                      }
                    },
                    "skuName": {
                      "type": "string",
                      "defaultValue": "Standard",
                      "allowedValues": [
                        "Standard"
                      ],
                      "metadata": {
                        "description": "The SKU name for the deployment."
                      }
                    },
                    "skuCapacity": {
                      "type": "int",
                      "metadata": {
                        "description": "The number of scale units for the deployment."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.CognitiveServices/accounts/deployments",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', parameters('parentAccountName'), parameters('name'))]",
                      "sku": {
                        "name": "[parameters('skuName')]",
                        "capacity": "[parameters('skuCapacity')]"
                      },
                      "properties": {
                        "model": {
                          "format": "[parameters('modelFormat')]",
                          "name": "[parameters('modelName')]",
                          "version": "[parameters('modelVersion')]"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('parentAccountName'), parameters('name'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'openai-account')]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'openai-account'), '2022-09-01').outputs.name.value]"
            },
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'openai-account'), '2022-09-01').outputs.endpoint.value]"
            },
            "deployments": {
              "type": "array",
              "copy": {
                "count": "[length(variables('deployments'))]",
                "input": {
                  "name": "[reference(resourceId('Microsoft.Resources/deployments', format('openai-model-deployment-{0}', variables('deployments')[copyIndex()].name)), '2022-09-01').outputs.name.value]"
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('environmentName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "database",
      "resourceGroup": "[parameters('environmentName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "accountName": "[if(not(empty(parameters('cosmosDbAccountName'))), createObject('value', parameters('cosmosDbAccountName')), createObject('value', format('{0}-{1}', variables('abbreviations').cosmosDbAccount, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "6861091373286878323"
            },
            "description": "Create database accounts."
          },
          "parameters": {
            "accountName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "database": {
              "name": "my-app-db"
            },
            "containers": [
              {
                "name": "ChatHistory",
                "partitionKeyPaths": [
                  "/SessionID"
                ],
                "indexingPolicy": {
                  "automatic": true,
                  "indexingMode": "consistent",
                  "includedPaths": [
                    {
                      "path": "/*"
                    }
                  ],
                  "excludedPaths": []
                }
              },
              {
                "name": "Users",
                "partitionKeyPaths": [
                  "/userinfo/email"
                ],
                "indexingPolicy": {
                  "automatic": true,
                  "indexingMode": "consistent",
                  "includedPaths": [
                    {
                      "path": "/*"
                    }
                  ],
                  "excludedPaths": []
                }
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "cosmos-db-account",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('accountName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "enableServerless": {
                    "value": true
                  },
                  "disableKeyBasedAuth": {
                    "value": true
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "16222491886419053166"
                    },
                    "description": "Create an Azure Cosmos DB account."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "GlobalDocumentDB",
                      "allowedValues": [
                        "GlobalDocumentDB"
                      ],
                      "metadata": {
                        "description": "Sets the kind of account."
                      }
                    },
                    "enableServerless": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Enables serverless for this account. Defaults to true."
                      }
                    },
                    "enableNoSQLVectorSearch": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enables NoSQL vector search for this account. Defaults to false."
                      }
                    },
                    "enableNoSQLFullTextSearch": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enables NoSQL full text search for this account. Defaults to false."
                      }
                    },
                    "disableKeyBasedAuth": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Disables key-based authentication. Defaults to false."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts",
                      "apiVersion": "2024-05-15",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "consistencyPolicy": {
                          "defaultConsistencyLevel": "Session"
                        },
                        "databaseAccountOfferType": "Standard",
                        "locations": [
                          {
                            "locationName": "[parameters('location')]",
                            "failoverPriority": 0,
                            "isZoneRedundant": false
                          }
                        ],
                        "enableAutomaticFailover": false,
                        "enableMultipleWriteLocations": false,
                        "disableLocalAuth": "[parameters('disableKeyBasedAuth')]",
                        "capabilities": "[union(if(parameters('enableServerless'), createArray(createObject('name', 'EnableServerless')), createArray()), if(parameters('enableNoSQLVectorSearch'), createArray(createObject('name', 'EnableNoSQLVectorSearch')), createArray()), if(parameters('enableNoSQLFullTextSearch'), createArray(createObject('name', 'EnableNoSQLFullTextSearch')), createArray()))]"
                      }
                    }
                  ],
                  "outputs": {
                    "endpoint": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name')), '2024-05-15').documentEndpoint]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('cosmos-db-database-{0}', variables('database').name)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[variables('database').name]"
                  },
                  "parentAccountName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-db-account'), '2022-09-01').outputs.name.value]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "setThroughput": {
                    "value": false
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "13876417159616011191"
                    },
                    "description": "Create an Azure Cosmos DB for NoSQL database."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "parentAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the parent Azure Cosmos DB account."
                      }
                    },
                    "setThroughput": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enables throughput setting at this resource level. Defaults to false."
                      }
                    },
                    "autoscale": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enables autoscale. If setThroughput is enabled, defaults to false."
                      }
                    },
                    "throughput": {
                      "type": "int",
                      "defaultValue": 400,
                      "metadata": {
                        "description": "The amount of throughput set. If setThroughput is enabled, defaults to 400."
                      }
                    }
                  },
                  "variables": {
                    "options": "[if(parameters('setThroughput'), if(parameters('autoscale'), createObject('autoscaleSettings', createObject('maxThroughput', parameters('throughput'))), createObject('throughput', parameters('throughput'))), createObject())]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
                      "apiVersion": "2024-05-15",
                      "name": "[format('{0}/{1}', parameters('parentAccountName'), parameters('name'))]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "options": "[variables('options')]",
                        "resource": {
                          "id": "[parameters('name')]"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'cosmos-db-account')]"
              ]
            },
            {
              "copy": {
                "name": "cosmosDbContainers",
                "count": "[length(variables('containers'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('cosmos-db-container-{0}', variables('containers')[copyIndex()].name)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[variables('containers')[copyIndex()].name]"
                  },
                  "parentAccountName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-db-account'), '2022-09-01').outputs.name.value]"
                  },
                  "parentDatabaseName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('cosmos-db-database-{0}', variables('database').name)), '2022-09-01').outputs.name.value]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "setThroughput": {
                    "value": false
                  },
                  "partitionKeyPaths": {
                    "value": "[variables('containers')[copyIndex()].partitionKeyPaths]"
                  },
                  "indexingPolicy": {
                    "value": "[variables('containers')[copyIndex()].indexingPolicy]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "languageVersion": "2.0",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "8268009908230787019"
                    },
                    "description": "Create an Azure Cosmos DB for NoSQL container."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "parentAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the parent Azure Cosmos DB account."
                      }
                    },
                    "parentDatabaseName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the parent Azure Cosmos DB database."
                      }
                    },
                    "setThroughput": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enables throughput setting at this resource level. Defaults to true."
                      }
                    },
                    "autoscale": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enables autoscale. If setThroughput is enabled, defaults to false."
                      }
                    },
                    "throughput": {
                      "type": "int",
                      "defaultValue": 400,
                      "metadata": {
                        "description": "The amount of throughput set. If setThroughput is enabled, defaults to 400."
                      }
                    },
                    "partitionKeyPaths": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "defaultValue": [
                        "/id"
                      ],
                      "metadata": {
                        "description": "List of hierarhical partition key paths. Defaults to an array that only contains /id."
                      }
                    },
                    "indexingPolicy": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional custom indexing policy for the container."
                      }
                    },
                    "vectorEmbeddingPolicy": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional vector embedding policy for the container."
                      }
                    },
                    "fullTextPolicy": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional full text policy for the container."
                      }
                    }
                  },
                  "variables": {
                    "options": "[if(parameters('setThroughput'), if(parameters('autoscale'), createObject('autoscaleSettings', createObject('maxThroughput', parameters('throughput'))), createObject('throughput', parameters('throughput'))), createObject())]"
                  },
                  "resources": {
                    "account": {
                      "existing": true,
                      "type": "Microsoft.DocumentDB/databaseAccounts",
                      "apiVersion": "2024-05-15",
                      "name": "[parameters('parentAccountName')]"
                    },
                    "database": {
                      "existing": true,
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
                      "apiVersion": "2024-05-15",
                      "name": "[format('{0}/{1}', parameters('parentAccountName'), parameters('parentDatabaseName'))]"
                    },
                    "container": {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                      "apiVersion": "2024-05-15",
                      "name": "[format('{0}/{1}/{2}', parameters('parentAccountName'), parameters('parentDatabaseName'), parameters('name'))]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "options": "[variables('options')]",
                        "resource": "[union(createObject('id', parameters('name'), 'partitionKey', createObject('paths', parameters('partitionKeyPaths'), 'kind', 'MultiHash', 'version', 2)), if(not(empty(parameters('indexingPolicy'))), createObject('indexingPolicy', parameters('indexingPolicy')), createObject()), if(not(empty(parameters('vectorEmbeddingPolicy'))), createObject('vectorEmbeddingPolicy', parameters('vectorEmbeddingPolicy')), createObject()), if(not(empty(parameters('fullTextPolicy'))), createObject('fullTextPolicy', parameters('fullTextPolicy')), createObject()))]"
                      }
                    }
                  },
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'cosmos-db-account')]",
                "[resourceId('Microsoft.Resources/deployments', format('cosmos-db-database-{0}', variables('database').name))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-db-account'), '2022-09-01').outputs.endpoint.value]"
            },
            "accountName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-db-account'), '2022-09-01').outputs.name.value]"
            },
            "database": {
              "type": "object",
              "value": {
                "name": "[reference(resourceId('Microsoft.Resources/deployments', format('cosmos-db-database-{0}', variables('database').name)), '2022-09-01').outputs.name.value]"
              }
            },
            "containers": {
              "type": "array",
              "copy": {
                "count": "[length(variables('containers'))]",
                "input": {
                  "name": "[reference(resourceId('Microsoft.Resources/deployments', format('cosmos-db-container-{0}', variables('containers')[copyIndex()].name)), '2022-09-01').outputs.name.value]"
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('environmentName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "web",
      "resourceGroup": "[parameters('environmentName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "frontendAppName": "[if(not(empty(parameters('frontendAppName'))), createObject('value', parameters('frontendAppName')), createObject('value', format('{0}-fe-{1}', variables('abbreviations').appServiceWebApp, variables('resourceToken'))))]",
          "backendAppName": "[if(not(empty(parameters('backendAppName'))), createObject('value', parameters('backendAppName')), createObject('value', format('{0}-be-{1}', variables('abbreviations').appServiceWebApp, variables('resourceToken'))))]",
          "frontendPlanName": "[if(not(empty(parameters('frontendAppServicePlanName'))), createObject('value', parameters('frontendAppServicePlanName')), createObject('value', format('{0}-fe-{1}', variables('abbreviations').appServicePlan, variables('resourceToken'))))]",
          "backendPlanName": "[if(not(empty(parameters('backendAppServicePlanName'))), createObject('value', parameters('backendAppServicePlanName')), createObject('value', format('{0}-be-{1}', variables('abbreviations').appServicePlan, variables('resourceToken'))))]",
          "databaseAccountEndpoint": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'database'), '2022-09-01').outputs.endpoint.value]"
          },
          "databaseName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'database'), '2022-09-01').outputs.database.value.name]"
          },
          "chatHistoryContainer": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'database'), '2022-09-01').outputs.containers.value[0].name]"
          },
          "usersContainer": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'database'), '2022-09-01').outputs.containers.value[1].name]"
          },
          "openAiSettings": {
            "value": {
              "endpoint": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.endpoint.value]",
              "completionDeploymentName": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.deployments.value[0].name]",
              "embeddingDeploymentName": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.deployments.value[1].name]"
            }
          },
          "frontendManagedIdentity": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'identity'), '2022-09-01').outputs.frontendIdentity.value]"
          },
          "backendManagedIdentity": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'identity'), '2022-09-01').outputs.backendIdentity.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "7956914925518965278"
            },
            "description": "Create web apps with separated frontend and backend services"
          },
          "definitions": {
            "managedIdentity": {
              "type": "object",
              "properties": {
                "resourceId": {
                  "type": "string"
                },
                "clientId": {
                  "type": "string"
                }
              }
            }
          },
          "parameters": {
            "frontendAppName": {
              "type": "string"
            },
            "backendAppName": {
              "type": "string"
            },
            "frontendPlanName": {
              "type": "string"
            },
            "backendPlanName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "sku": {
              "type": "string",
              "defaultValue": "B1",
              "metadata": {
                "description": "SKU of the App Service Plans"
              }
            },
            "databaseAccountEndpoint": {
              "type": "string",
              "metadata": {
                "description": "Cosmos DB configuration"
              }
            },
            "databaseName": {
              "type": "string"
            },
            "chatHistoryContainer": {
              "type": "string"
            },
            "usersContainer": {
              "type": "string"
            },
            "openAiSettings": {
              "type": "object",
              "defaultValue": {
                "endpoint": "",
                "completionDeploymentName": "",
                "embeddingDeploymentName": ""
              },
              "metadata": {
                "description": "OpenAI settings"
              }
            },
            "frontendManagedIdentity": {
              "$ref": "#/definitions/managedIdentity",
              "metadata": {
                "description": "Frontend user-assigned managed identity"
              }
            },
            "backendManagedIdentity": {
              "$ref": "#/definitions/managedIdentity",
              "metadata": {
                "description": "Backend user-assigned managed identity"
              }
            }
          },
          "resources": {
            "frontendPlan": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "frontend-app-service-plan",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('frontendPlanName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "sku": {
                    "value": "[parameters('sku')]"
                  },
                  "kind": {
                    "value": "linux"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "17231282513372840492"
                    },
                    "description": "Creates an Azure App Service plan."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "linux",
                      "allowedValues": [
                        "linux"
                      ],
                      "metadata": {
                        "description": "OS type of the plan. Defaults to \"linux\"."
                      }
                    },
                    "sku": {
                      "type": "string",
                      "defaultValue": "F1",
                      "metadata": {
                        "description": "SKU for the plan. Defaults to \"F1\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "[parameters('sku')]"
                      },
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "reserved": "[if(equals(parameters('kind'), 'linux'), true(), null())]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            "backendPlan": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "backend-app-service-plan",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('backendPlanName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "sku": {
                    "value": "[parameters('sku')]"
                  },
                  "kind": {
                    "value": "linux"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "17231282513372840492"
                    },
                    "description": "Creates an Azure App Service plan."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "linux",
                      "allowedValues": [
                        "linux"
                      ],
                      "metadata": {
                        "description": "OS type of the plan. Defaults to \"linux\"."
                      }
                    },
                    "sku": {
                      "type": "string",
                      "defaultValue": "F1",
                      "metadata": {
                        "description": "SKU for the plan. Defaults to \"F1\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "[parameters('sku')]"
                      },
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "reserved": "[if(equals(parameters('kind'), 'linux'), true(), null())]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            "frontendApp": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "frontend-web-app",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('frontendAppName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "parentPlanName": {
                    "value": "[reference('frontendPlan').outputs.name.value]"
                  },
                  "runtimeName": {
                    "value": "node"
                  },
                  "runtimeVersion": {
                    "value": "20-lts"
                  },
                  "kind": {
                    "value": "app,linux"
                  },
                  "enableSystemAssignedManagedIdentity": {
                    "value": false
                  },
                  "userAssignedManagedIdentityIds": {
                    "value": [
                      "[parameters('frontendManagedIdentity').resourceId]"
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6979902803242153095"
                    },
                    "description": "Creates an Azure App Service site."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "parentPlanName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the parent plan for the site."
                      }
                    },
                    "runtimeName": {
                      "type": "string",
                      "allowedValues": [
                        "dotnet",
                        "dotnetcore",
                        "dotnet-isolated",
                        "node",
                        "python",
                        "java",
                        "powershell",
                        "custom"
                      ],
                      "metadata": {
                        "description": "Runtime to use for the site."
                      }
                    },
                    "runtimeVersion": {
                      "type": "string",
                      "metadata": {
                        "description": "Version of the runtime to use for the site."
                      }
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "app,linux",
                      "metadata": {
                        "description": "The OS kind of the site. Defaults to \"app, linux\""
                      }
                    },
                    "alwaysOn": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "If the site should be always on. Defaults to true."
                      }
                    },
                    "allowedCorsOrigins": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Allowed origins for client-side CORS request on the site."
                      }
                    },
                    "enableSystemAssignedManagedIdentity": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enable system-assigned managed identity. Defaults to false."
                      }
                    },
                    "userAssignedManagedIdentityIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of user-assigned managed identities. Defaults to an empty array."
                      }
                    }
                  },
                  "variables": {
                    "linuxFxVersion": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "identity": {
                        "type": "[if(parameters('enableSystemAssignedManagedIdentity'), if(not(empty(parameters('userAssignedManagedIdentityIds'))), 'SystemAssigned, UserAssigned', 'SystemAssigned'), if(not(empty(parameters('userAssignedManagedIdentityIds'))), 'UserAssigned', 'None'))]",
                        "userAssignedIdentities": "[if(not(empty(parameters('userAssignedManagedIdentityIds'))), toObject(parameters('userAssignedManagedIdentityIds'), lambda('id', lambdaVariables('id')), lambda('id', createObject())), null())]"
                      },
                      "properties": {
                        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('parentPlanName'))]",
                        "siteConfig": {
                          "linuxFxVersion": "[variables('linuxFxVersion')]",
                          "alwaysOn": "[parameters('alwaysOn')]",
                          "http20Enabled": true,
                          "minTlsVersion": "1.2",
                          "cors": {
                            "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedCorsOrigins'))]"
                          }
                        },
                        "httpsOnly": true
                      }
                    }
                  ],
                  "outputs": {
                    "endpoint": {
                      "type": "string",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-09-01').defaultHostName)]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "managedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[if(parameters('enableSystemAssignedManagedIdentity'), reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-09-01', 'full').identity.principalId, '')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "frontendPlan"
              ]
            },
            "backendApp": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "backend-web-app",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('backendAppName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "parentPlanName": {
                    "value": "[reference('backendPlan').outputs.name.value]"
                  },
                  "runtimeName": {
                    "value": "dotnetcore"
                  },
                  "runtimeVersion": {
                    "value": "8.0"
                  },
                  "kind": {
                    "value": "app,linux"
                  },
                  "enableSystemAssignedManagedIdentity": {
                    "value": false
                  },
                  "userAssignedManagedIdentityIds": {
                    "value": [
                      "[parameters('backendManagedIdentity').resourceId]"
                    ]
                  },
                  "allowedCorsOrigins": {
                    "value": [
                      "[format('https://{0}.azurewebsites.net', parameters('frontendAppName'))]",
                      "http://localhost:3000"
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6979902803242153095"
                    },
                    "description": "Creates an Azure App Service site."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "parentPlanName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the parent plan for the site."
                      }
                    },
                    "runtimeName": {
                      "type": "string",
                      "allowedValues": [
                        "dotnet",
                        "dotnetcore",
                        "dotnet-isolated",
                        "node",
                        "python",
                        "java",
                        "powershell",
                        "custom"
                      ],
                      "metadata": {
                        "description": "Runtime to use for the site."
                      }
                    },
                    "runtimeVersion": {
                      "type": "string",
                      "metadata": {
                        "description": "Version of the runtime to use for the site."
                      }
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "app,linux",
                      "metadata": {
                        "description": "The OS kind of the site. Defaults to \"app, linux\""
                      }
                    },
                    "alwaysOn": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "If the site should be always on. Defaults to true."
                      }
                    },
                    "allowedCorsOrigins": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Allowed origins for client-side CORS request on the site."
                      }
                    },
                    "enableSystemAssignedManagedIdentity": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enable system-assigned managed identity. Defaults to false."
                      }
                    },
                    "userAssignedManagedIdentityIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of user-assigned managed identities. Defaults to an empty array."
                      }
                    }
                  },
                  "variables": {
                    "linuxFxVersion": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "identity": {
                        "type": "[if(parameters('enableSystemAssignedManagedIdentity'), if(not(empty(parameters('userAssignedManagedIdentityIds'))), 'SystemAssigned, UserAssigned', 'SystemAssigned'), if(not(empty(parameters('userAssignedManagedIdentityIds'))), 'UserAssigned', 'None'))]",
                        "userAssignedIdentities": "[if(not(empty(parameters('userAssignedManagedIdentityIds'))), toObject(parameters('userAssignedManagedIdentityIds'), lambda('id', lambdaVariables('id')), lambda('id', createObject())), null())]"
                      },
                      "properties": {
                        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('parentPlanName'))]",
                        "siteConfig": {
                          "linuxFxVersion": "[variables('linuxFxVersion')]",
                          "alwaysOn": "[parameters('alwaysOn')]",
                          "http20Enabled": true,
                          "minTlsVersion": "1.2",
                          "cors": {
                            "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedCorsOrigins'))]"
                          }
                        },
                        "httpsOnly": true
                      }
                    }
                  ],
                  "outputs": {
                    "endpoint": {
                      "type": "string",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-09-01').defaultHostName)]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "managedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[if(parameters('enableSystemAssignedManagedIdentity'), reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-09-01', 'full').identity.principalId, '')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "backendPlan"
              ]
            },
            "backendAppConfig": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "backend-app-config",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parentSiteName": {
                    "value": "[reference('backendApp').outputs.name.value]"
                  },
                  "appSettings": {
                    "value": {
                      "AZURE_CLIENT_ID": "[parameters('backendManagedIdentity').clientId]",
                      "COSMOSDB__ENDPOINT": "[parameters('databaseAccountEndpoint')]",
                      "COSMOSDB__DATABASE": "[parameters('databaseName')]",
                      "COSMOSDB__CHATHISTORYCONTAINER": "[parameters('chatHistoryContainer')]",
                      "COSMOSDB__USERSCONTAINER": "[parameters('usersContainer')]",
                      "OPENAI__ENDPOINT": "[parameters('openAiSettings').endpoint]",
                      "OPENAI__COMPLETIONDEPLOYMENTNAME": "[parameters('openAiSettings').completionDeploymentName]",
                      "OPENAI__EMBEDDINGDEPLOYMENTNAME": "[parameters('openAiSettings').embeddingDeploymentName]"
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "1076132110712733910"
                    },
                    "description": "Creates an Azure App Service configuration for a site."
                  },
                  "parameters": {
                    "parentSiteName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the parent App Service site for the configuration."
                      }
                    },
                    "appSettings": {
                      "type": "secureObject",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}', parameters('parentSiteName'), 'appsettings')]",
                      "kind": "string",
                      "properties": "[parameters('appSettings')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "backendApp"
              ]
            },
            "frontendAppConfig": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "frontend-app-config",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parentSiteName": {
                    "value": "[reference('frontendApp').outputs.name.value]"
                  },
                  "appSettings": {
                    "value": {
                      "AZURE_CLIENT_ID": "[parameters('frontendManagedIdentity').clientId]",
                      "BACKEND_API_URL": "[format('https://{0}.azurewebsites.net', parameters('backendAppName'))]"
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "1076132110712733910"
                    },
                    "description": "Creates an Azure App Service configuration for a site."
                  },
                  "parameters": {
                    "parentSiteName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the parent App Service site for the configuration."
                      }
                    },
                    "appSettings": {
                      "type": "secureObject",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}/{1}', parameters('parentSiteName'), 'appsettings')]",
                      "kind": "string",
                      "properties": "[parameters('appSettings')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "frontendApp"
              ]
            }
          },
          "outputs": {
            "frontendAppName": {
              "type": "string",
              "value": "[reference('frontendApp').outputs.name.value]"
            },
            "frontendEndpoint": {
              "type": "string",
              "value": "[reference('frontendApp').outputs.endpoint.value]"
            },
            "backendAppName": {
              "type": "string",
              "value": "[reference('backendApp').outputs.name.value]"
            },
            "backendEndpoint": {
              "type": "string",
              "value": "[reference('backendApp').outputs.endpoint.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'ai')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'database')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'identity')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('environmentName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "security",
      "resourceGroup": "[parameters('environmentName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "databaseAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'database'), '2022-09-01').outputs.accountName.value]"
          },
          "appPrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'identity'), '2022-09-01').outputs.backendIdentity.value.principalId]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "8519548513115743640"
            },
            "description": "Create role assignment and definition resources."
          },
          "parameters": {
            "databaseAccountName": {
              "type": "string"
            },
            "appPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Id of the backend managed identity principal to assign database roles."
              }
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "nosql-role-definition",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "targetAccountName": {
                    "value": "[parameters('databaseAccountName')]"
                  },
                  "definitionName": {
                    "value": "Write to Azure Cosmos DB for NoSQL data plane"
                  },
                  "permissionsDataActions": {
                    "value": [
                      "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                      "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*",
                      "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*"
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "languageVersion": "2.0",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "9190767095179520819"
                    },
                    "description": "Create an Azure Cosmos DB for NoSQL role definition."
                  },
                  "parameters": {
                    "targetAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the target Azure Cosmos DB account."
                      }
                    },
                    "definitionName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the role definiton."
                      }
                    },
                    "permissionsDataActions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "defaultValue": [],
                      "metadata": {
                        "description": "An array of data actions that are allowed. Defaults to an empty array."
                      }
                    },
                    "permissionsNonDataActions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "defaultValue": [],
                      "metadata": {
                        "description": "An array of data actions that are denied. Defaults to an empty array."
                      }
                    }
                  },
                  "resources": {
                    "account": {
                      "existing": true,
                      "type": "Microsoft.DocumentDB/databaseAccounts",
                      "apiVersion": "2023-04-15",
                      "name": "[parameters('targetAccountName')]"
                    },
                    "definition": {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
                      "apiVersion": "2023-04-15",
                      "name": "[format('{0}/{1}', parameters('targetAccountName'), guid('nosql-role-definition', resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('targetAccountName'))))]",
                      "properties": {
                        "assignableScopes": [
                          "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('targetAccountName'))]"
                        ],
                        "permissions": [
                          {
                            "dataActions": "[parameters('permissionsDataActions')]",
                            "notDataActions": "[parameters('permissionsNonDataActions')]"
                          }
                        ],
                        "roleName": "[parameters('definitionName')]",
                        "type": "CustomRole"
                      }
                    }
                  },
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('targetAccountName'), guid('nosql-role-definition', resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('targetAccountName'))))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "nosql-role-assignment-backend",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "targetAccountName": {
                    "value": "[parameters('databaseAccountName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'nosql-role-definition'), '2022-09-01').outputs.id.value]"
                  },
                  "principalId": {
                    "value": "[parameters('appPrincipalId')]"
                  },
                  "principalType": {
                    "value": "[parameters('principalType')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7203762123378098496"
                    },
                    "description": "Create an Azure Cosmos DB for NoSQL role assignment."
                  },
                  "parameters": {
                    "targetAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the target Azure Cosmos DB account."
                      }
                    },
                    "roleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Id of the role definition to assign to the targeted principal and account."
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "metadata": {
                        "description": "Id of the principal to assign the role definition for the account."
                      }
                    },
                    "principalType": {
                      "type": "string",
                      "metadata": {
                        "description": "Principal type used for the role assignment."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
                      "apiVersion": "2023-04-15",
                      "name": "[format('{0}/{1}', parameters('targetAccountName'), guid(parameters('roleDefinitionId'), parameters('principalId'), resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('targetAccountName'))))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "roleDefinitionId": "[parameters('roleDefinitionId')]",
                        "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('targetAccountName'))]",
                        "principalType": "[parameters('principalType')]"
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments', parameters('targetAccountName'), guid(parameters('roleDefinitionId'), parameters('principalId'), resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('targetAccountName'))))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'nosql-role-definition')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-role-assignment-backend",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "roleDefinitionId": {
                    "value": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5e0bd9bd-7b93-4f28-af87-19fc36ad61bd')]"
                  },
                  "principalId": {
                    "value": "[parameters('appPrincipalId')]"
                  },
                  "principalType": {
                    "value": "[parameters('principalType')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "10104331312498276888"
                    },
                    "description": "Creates a role-based access control assignment."
                  },
                  "parameters": {
                    "roleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Id of the role definition to assign to the targeted principal and account."
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "metadata": {
                        "description": "Id of the principal to assign the role definition for the account."
                      }
                    },
                    "principalType": {
                      "type": "string",
                      "metadata": {
                        "description": "Type of principal associated with the principal Id."
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "roleDefinitionId": "[parameters('roleDefinitionId')]",
                        "principalType": "[if(not(equals(parameters('principalType'), 'None')), parameters('principalType'), null())]"
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Authorization/roleAssignments', guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId')))]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "roleDefinitionId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'nosql-role-definition'), '2022-09-01').outputs.id.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'database')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'identity')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('environmentName'))]"
      ]
    }
  ],
  "outputs": {
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    },
    "AZURE_FRONTEND_IDENTITY_CLIENT_ID": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'identity'), '2022-09-01').outputs.frontendIdentity.value.clientId]"
    },
    "AZURE_BACKEND_IDENTITY_CLIENT_ID": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'identity'), '2022-09-01').outputs.backendIdentity.value.clientId]"
    },
    "AZURE_COSMOS_DB_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'database'), '2022-09-01').outputs.endpoint.value]"
    },
    "AZURE_COSMOS_DB_DATABASE_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'database'), '2022-09-01').outputs.database.value.name]"
    },
    "AZURE_COSMOS_DB_CHAT_CONTAINER_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'database'), '2022-09-01').outputs.containers.value[0].name]"
    },
    "AZURE_COSMOS_DB_USERS_CONTAINER_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'database'), '2022-09-01').outputs.containers.value[1].name]"
    },
    "AZURE_OPENAI_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.endpoint.value]"
    },
    "AZURE_OPENAI_COMPLETION_DEPLOYMENT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.deployments.value[0].name]"
    },
    "AZURE_OPENAI_EMBEDDING_DEPLOYMENT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'ai'), '2022-09-01').outputs.deployments.value[1].name]"
    },
    "AZURE_FRONTEND_APP_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.frontendAppName.value]"
    },
    "AZURE_FRONTEND_APP_URL": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.frontendEndpoint.value]"
    },
    "AZURE_BACKEND_APP_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.backendAppName.value]"
    },
    "AZURE_BACKEND_APP_URL": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('environmentName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.backendEndpoint.value]"
    }
  }
}
